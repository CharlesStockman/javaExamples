spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order_service
spring.datasource.username=root
spring.datasource.password=mysql
spring.jpa.hibernate.ddl-auto=none

server.port=0
spring.application.name = Order-Service

inventory.url=http://localohost:8082

# Can access REST Documentation (ex . http://localhost:8080/swagger-ui.html)
springdoc.swagger-ui.path=/swagger-ui.html

# Can access the REST Documentation as a json file ( http://localhost:8080/api-docs)
springdoc.api-docs.path=/api-docs;

#########################################################
# Resilience4j Properties
#########################################################

# Set to true since circuit breakers are set on health endpoints
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true

# Criteria to switch on circuit breaker
resilience4j.circuitbreaker.instance.inventory.slidingWindowType=COUNT_BASED

# Number of elements in the count windows to determine to switch on circuit brak
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=10

# This is the percentage of calls in the window failed ( This configuration uses slidingWindowSize)
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50

# Main Duration in Open States until it moves to Half Open State
resilience4j.circuitbreaker.instances.inventory.waitDurationOpenState=5s

# Allow 3 calls to the service, and if failure of at least one goes back to open state else close state
resilience4j.circuitbreaker.instances.inventory.PermittedNumberOfCallsInHalfOpenState=3

# After waitDurationOpenState timeout then move to the half-open state automatically
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

# Circuit Breaker will not open until the minimum number of calls has failed (default is that all must fail)
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5

###########################
# Resilience4j Timeout Properties
###########################

# Resilience4j is not determining the response used for slowdowns and not failures
resilience4j.circuitbreaker.instances.inventory.default.timeout-duration=3s


#############################
# Resilience4j Retry Properties
#############################

# Before the time happens set the number of max attempts and the wait duration
# resilience4j.circuitbreaker.instances.inventory.default.max_attempts = 3
resilience4j.circuitbreaker.instances.inventory.default.wait-duration = 5s
